user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
    server {
        # Undefined Production
        server_name mosey.systems www.mosey.systems;
        listen 80 ;
        listen [::]:80  ;

        root /var/www/undefined/build;
        index index.html;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/mosey.systems/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mosey.systems/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
           return 301 https://$host$request_uri;
        } # managed by Certbot

        location / {
            try_files $uri $uri/ =404;
        }

        location /menu {
            alias /var/www/menu;
        }

        location /chompskify {
	    alias /var/www/html/chompskify;	
	}

	location /api/vanatu {
            rewrite /api/vanatu(/.*) $1 break;
            rewrite /api/vanatu / break;
            proxy_pass http://localhost:7335;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/cli {
            rewrite /api/cli(/.*) $1 break;
	    rewrite /api/cli / break;
            proxy_pass http://localhost:7331;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    
    }

    server {
        # Undefined staging
        server_name staging.mosey.systems; # managed by Certbot
        listen 80 ;
        listen [::]:80  ;
        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/mosey.systems/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mosey.systems/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
           return 301 https://$host$request_uri;
        } # managed by Certbot

        location / {
            return 404;
        }

        location /secret {
            return 403;
        }

        location /api/vanatu {
            rewrite /api/vanatu(/.*) $1 break;
            rewrite /api/vanatu / break;
            proxy_pass http://localhost:7339;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/cli {
            rewrite /api/cli(/.*) $1 break;
            rewrite /api/cli / break;
            proxy_pass http://localhost:7337;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    

    }

    server {
        # HNM
        server_name hams-near-me.mosey.systems; # managed by Certbot
        listen 80 ;
        listen [::]:80  ;
        root /var/www/hams-near-me/client/build;
        index index.html;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/mosey.systems/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mosey.systems/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
           return 301 https://$host$request_uri;
        } # managed by Certbot

        location / {
            try_files $uri $uri/ =404;
        }

        location /api {
	    rewrite /api(/.*) $1 break;
            rewrite /api / break;
            proxy_pass http://localhost:7341;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        # HNM Staging
        server_name hams-near-me-staging.mosey.systems; # managed by Certbot
        listen 80 ;
        listen [::]:80  ;
        root /var/www/hams-near-me/client/build;
        index index.html;

        listen 443 ssl; # managed by Certbot

        # RSA certificate
        ssl_certificate /etc/letsencrypt/live/mosey.systems/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mosey.systems/privkey.pem; # managed by Certbot

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

        # Redirect non-https traffic to https
        if ($scheme != "https") {
           return 301 https://$host$request_uri;
        } # managed by Certbot

        location / {
            try_files $uri $uri/ =404;
        }

        location /api {
	    rewrite /api(/.*) $1 break;
            rewrite /api / break;
            proxy_pass http://localhost:7343;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    ##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;
	server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##
	gzip on;
	gzip_disable "msie6";
}
